name: Continuous Integration

on: [push, pull_request]

env:
  Configuration: Release
  ContinuousIntegrationBuild: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true

jobs:
  package:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: Build and run tests
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Retrieve cached NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
      - name: Restore NuGet packages for Core
        run: dotnet restore CoreTest/CoreTest.csproj --verbosity normal
      - name: Build solution for Core
        run: dotnet build CoreTest/CoreTest.csproj --verbosity normal
      - name: Run tests for Core
        run: dotnet test CoreTest/CoreTest.csproj --no-build --verbosity normal --logger:"html;LogFileName=../../TestResults-${{ runner.os }}.html"
      - name: Restore NuGet packages for PixelCanvas
        run: dotnet restore PixelCanvasTest/PixelCanvasTest.csproj --verbosity normal
      - name: Build solution for PixelCanvas
        run: dotnet build PixelCanvasTest/PixelCanvasTest.csproj --verbosity normal
      - name: Run tests for PixelCanvas
        run: dotnet test PixelCanvasTest/PixelCanvasTest.csproj --no-build --verbosity normal --logger:"html;LogFileName=../../TestResults-${{ runner.os }}.html"
      - name: Restore NuGet packages for Windows
        run: dotnet restore WindowsTest/WindowsTest.csproj --verbosity normal
        if: startsWith(matrix.os,'windows')
      - name: Build solution for Windows
        run: dotnet build WindowsTest/WindowsTest.csproj --verbosity normal
        if: startsWith(matrix.os,'windows')
      - name: Run tests for Windows
        run: dotnet test WindowsTest/WindowsTest.csproj --no-build --verbosity normal --logger:"html;LogFileName=../../TestResults-${{ runner.os }}.html"
        if: startsWith(matrix.os,'windows')
      - name: Upload received files from failing tests
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Received-${{ runner.os }}
          path: "**/*.received.*"
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: TestResults-${{ runner.os }}
          path: TestResults-${{ runner.os }}.html
      - name: Create and validate NuGet package for Core
        run: dotnet pack --no-build --verbosity normal Core/Core.csproj
      - name: Create and validate NuGet package for PixelCanvas
        run: dotnet pack --no-build --verbosity normal PixelCanvas/PixelCanvas.csproj
      - name: Create and validate NuGet package for Windows
        run: dotnet pack --no-build --verbosity normal WindowsTest/WindowsTest.csproj
        if: startsWith(matrix.os,'windows')
